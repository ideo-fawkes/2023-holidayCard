{"ast":null,"code":"var _jsxFileName = \"/Users/twickesideo.com/Dropbox (IDEO)/IDEO_Documents/holidayCard/2023-holidayCard/src/Components/ImageGenerator/ImageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport { div } from '@tensorflow/tfjs';\nimport React, { useRef, useState } from 'react';\nimport './ImageGenerator.css';\nimport default_image from '../Assets/default_image.png';\nimport { storage } from '../../firebase';\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [imageUpload, setImageUpload] = useState(null);\n  const uploadImage = () => {\n    if (imageUpload == null) return;\n    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`);\n    uploadBytes(imageRef, imageUpload).then(() => {\n      alert(\"Image uploaded!\");\n    });\n  };\n  const [image_url, setImage_url] = useState(\"/\");\n  let inputRef = useRef(null);\n  const imageGenerator = async () => {\n    if (inputRef.current.value === \"\") {\n      return 0;\n    }\n    const response = await fetch(\"https://api.openai.com/v1/images/generations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer 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\",\n        \"User-Agent\": \"Chrome\"\n      },\n      body: JSON.stringify({\n        prompt: `${inputRef.current.value}`,\n        n: 1,\n        size: \"512x512\"\n      })\n    });\n    let data = await response.json();\n    console.log(data);\n    let data_array = data.data;\n    setImage_url(data_array[0].url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-image-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"AI Image \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_url === \"/\" ? default_image : image_url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        className: \"search-input\",\n        placeholder: \"What is your favorite memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-btn\",\n        onClick: () => {\n          imageGenerator();\n        },\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageGenerator, \"paKg7Dv5svUo8oU3bK9OP6lH2AU=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["div","React","useRef","useState","default_image","storage","ref","uploadBytes","v4","jsxDEV","_jsxDEV","ImageGenerator","_s","imageUpload","setImageUpload","uploadImage","imageRef","name","then","alert","image_url","setImage_url","inputRef","imageGenerator","current","value","response","fetch","method","headers","Authorization","body","JSON","stringify","prompt","n","size","data","json","console","log","data_array","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/twickesideo.com/Dropbox (IDEO)/IDEO_Documents/holidayCard/2023-holidayCard/src/Components/ImageGenerator/ImageGenerator.jsx"],"sourcesContent":["import { div } from '@tensorflow/tfjs'\nimport React, { useRef, useState } from 'react' \nimport './ImageGenerator.css'\nimport default_image from '../Assets/default_image.png'\nimport { storage } from '../../firebase'\nimport { ref, uploadBytes } from \"firebase/storage\"\nimport { v4 } from 'uuid'\n\nconst ImageGenerator = () => {\n\n    const [imageUpload, setImageUpload] = useState(null);\n    const uploadImage = () => {\n        if (imageUpload == null ) return;\n        const imageRef = ref(storage, `images/${imageUpload.name + v4()}`);\n        uploadBytes(imageRef, imageUpload).then(() => {\n            alert(\"Image uploaded!\");\n        })\n    }\n\n    const [image_url,setImage_url] = useState(\"/\");\n    let inputRef = useRef(null);\n\n    const imageGenerator = async () => {\n        if(inputRef.current.value===\"\") {\n            return 0;\n        }\n        const response = await fetch(\n            \"https://api.openai.com/v1/images/generations\",\n            {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\":\"application/json\",\n                    Authorization: \"Bearer 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\",\n                    \"User-Agent\":\"Chrome\",\n                },\n                body:JSON.stringify ({\n                    prompt:`${inputRef.current.value}`,\n                    n:1,\n                    size:\"512x512\"\n                })\n            }\n        ); \n        let data = await response.json();\n        console.log(data);\n        let data_array = data.data;\n        setImage_url(data_array[0].url);\n    }\n\n    return (\n        <div className='ai-image-generator'>\n            <div className=\"header\">AI Image <span>generator</span></div>\n            <div className=\"img-loading\">\n            <div className=\"image\"><img src={image_url===\"/\"?default_image:image_url} alt=\"\" /></div>\n            </div>\n            <div className=\"search-box\">\n                <input type=\"text\" ref={inputRef} className=\"search-input\" placeholder='What is your favorite memory' />\n                <div className=\"generate-btn\" onClick={()=>{imageGenerator()}}>Generate</div>\n            </div>\n        </div>\n    )\n}\n\nexport default ImageGenerator"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}